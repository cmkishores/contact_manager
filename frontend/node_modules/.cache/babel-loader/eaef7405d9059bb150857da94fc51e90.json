{"ast":null,"code":"var _jsxFileName = \"/home/cmkishores/FullContact_Assignment/frontend/src/ContactList.js\";\nimport React, { Component } from 'react';\nimport ContactManager from './ContactManager';\nconst contactManager = new ContactManager();\n\nclass ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      nextPageURL: ''\n    };\n    this.nextPage = this.nextPage.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    contactManager.getContacts().then(function (result) {\n      console.log(result);\n      self.setState({\n        contacts: result.data,\n        nextPageURL: result.nextlink\n      });\n    });\n  }\n\n  handleChange(e, name) {}\n\n  handleDelete(e, pk) {\n    var self = this;\n    contactManager.deleteContact({\n      pk: pk\n    }).then(() => {\n      var newArr = self.state.contacts.filter(function (obj) {\n        return obj.pk !== pk;\n      });\n      self.setState({\n        contacts: newArr\n      });\n    });\n  }\n\n  nextPage() {\n    var self = this;\n    console.log(this.state.nextPageURL);\n    contactManager.getContactsByURL(this.state.nextPageURL).then(result => {\n      self.setState({\n        contacts: result.data,\n        nextPageURL: result.nextlink\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contacts--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      placeholder: \"Search for...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.data.map(i => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, i.name)))), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      key: \"thead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Organization\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Created\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.contacts.map((contact, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, contact.id, \"  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, contact.first_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, contact.last_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, contact.phone_number), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, contact.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, contact.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, contact.organization), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, contact.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, contact.createdAt), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: e => this.handleDelete(e, contact.pk),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Delete\"), React.createElement(\"a\", {\n      href: \"/contacts/\" + contact.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" Update\")))))), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nexport default ContactList;","map":{"version":3,"sources":["/home/cmkishores/FullContact_Assignment/frontend/src/ContactList.js"],"names":["React","Component","ContactManager","contactManager","ContactList","constructor","props","state","contacts","nextPageURL","nextPage","bind","handleDelete","componentDidMount","self","getContacts","then","result","console","log","setState","data","nextlink","handleChange","e","name","pk","deleteContact","newArr","filter","obj","getContactsByURL","render","input","search","handleInputChange","map","i","contact","id","first_name","last_name","phone_number","email","description","organization","title","createdAt"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport  ContactManager  from  './ContactManager';\n\nconst  contactManager  =  new  ContactManager();\n\nclass  ContactList  extends  Component {\n\n    constructor(props) {\n        super(props);\n        this.state  = {\n            contacts: [],\n            nextPageURL:  ''\n        };\n        this.nextPage  =  this.nextPage.bind(this);\n        this.handleDelete  =  this.handleDelete.bind(this);\n    }\n    \n    componentDidMount() {\n        var  self  =  this;\n        contactManager.getContacts().then(function (result) {\n            console.log(result);\n            self.setState({ contacts:  result.data, nextPageURL:  result.nextlink})\n        });\n    }\n    handleChange(e,name){\n\n    }\n    handleDelete(e,pk){\n        var  self  =  this;\n        contactManager.deleteContact({pk :  pk}).then(()=>{\n            var  newArr  =  self.state.contacts.filter(function(obj) {\n                return  obj.pk  !==  pk;\n            });\n    \n            self.setState({contacts:  newArr})\n        });\n    }\n    \n    nextPage(){\n        var  self  =  this;\n        console.log(this.state.nextPageURL);        \n        contactManager.getContactsByURL(this.state.nextPageURL).then((result) => {\n            self.setState({ contacts:  result.data, nextPageURL:  result.nextlink})\n        });\n    }\n    render() {\n    \n        return (\n            <div  className=\"contacts--list\">\n                \n                <div className=\"searchForm\">\n                <form>\n                    <input type=\"text\" id=\"filter\" placeholder=\"Search for...\" ref={input => this.search = input} onChange={this.handleInputChange}/>\n                </form>\n                <div>\n                    {\n                        this.state.data.map((i) =>\n                            <p>{i.name}</p>\n                        )\n                    }\n                </div>\n                </div>\n                <table  className=\"table\">\n                <thead  key=\"thead\">\n                <tr >\n\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Phone</th>\n                    <th>Email</th>\n                    <th>Description</th>\n                    <th>Organization</th>\n                    <th>Title</th>\n                    <th>Created</th>\n\n\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.contacts.map( (contact,i)  =>\n                    <tr  key={i}>\n                    <td>{contact.id}  </td>\n                    <td>{contact.first_name}</td>\n                    <td>{contact.last_name}</td>\n                    <td>{contact.phone_number}</td>\n                    <td>{contact.email}</td>\n                    <td>{contact.description}</td>\n                    <td>{contact.organization}</td>\n                    <td>{contact.title}</td>\n                    <td>{contact.createdAt}</td>\n\n\n\n                    <td>\n                    <button  className=\"btn btn-danger\" onClick={(e)=>  this.handleDelete(e,contact.pk) }> Delete</button>\n                    <a  href={\"/contacts/\" + contact.id}> Update</a>\n                    </td>\n                </tr>)}\n                </tbody>\n                </table>\n                <button  className=\"btn btn-primary\"  onClick=  {  this.nextPage  }>Next</button>\n                    \n            </div>\n            );\n      }\n    }\n    export  default  ContactList;\n    "]},"metadata":{},"sourceType":"module"}